{"version":3,"file":"domtastic.min.js","sources":["../src/util.js","../src/selector/index.js","../src/array.js","../src/baseClass.js","../src/css.js","../src/dom/index.js","../src/dom/attr.js","../src/dom/class.js","../src/dom/contains.js","../src/dom/data.js","../src/dom/extra.js","../src/dom/html.js","../src/selector/closest.js","../src/event/index.js","../src/event/trigger.js","../src/event/ready.js","../src/noconflict.js","../src/selector/extra.js","../src/type.js","../src/index.js"],"sourcesContent":["/*\n * @module Util\n */\n\n/*\n * Reference to the window object\n * @private\n */\n\nexport const win = typeof window !== 'undefined' ? window : {};\n\n/**\n * Convert `NodeList` to `Array`.\n *\n * @param {NodeList|Array} collection\n * @return {Array}\n * @private\n */\n\nexport const toArray = collection => {\n  const length = collection.length;\n  const result = new Array(length);\n  for(let i = 0; i < length; i++) {\n    result[i] = collection[i];\n  }\n  return result;\n};\n\n/**\n * Faster alternative to [].forEach method\n *\n * @param {Node|NodeList|Array} collection\n * @param {Function} callback\n * @return {Node|NodeList|Array}\n * @private\n */\n\nexport const each = (collection, callback, thisArg) => {\n  const length = collection.length;\n  if(length !== undefined && collection.nodeType === undefined) {\n    for(let i = 0; i < length; i++) {\n      callback.call(thisArg, collection[i], i, collection);\n    }\n  } else {\n    callback.call(thisArg, collection, 0, collection);\n  }\n  return collection;\n};\n\n/**\n * Assign enumerable properties from source object(s) to target object\n *\n * @method extend\n * @param {Object} target Object to extend\n * @param {Object} [source] Object to extend from\n * @return {Object} Extended object\n * @example\n *     $.extend({a: 1}, {b: 2}); // {a: 1, b: 2}\n * @example\n *     $.extend({a: 1}, {b: 2}, {a: 3}); // {a: 3, b: 2}\n */\n\nexport const extend = (target, ...sources) => {\n  sources.forEach(src => {\n    for(let prop in src) {\n      target[prop] = src[prop];\n    }\n  });\n  return target;\n};\n\n/**\n * Return the collection without duplicates\n *\n * @param collection Collection to remove duplicates from\n * @return {Node|NodeList|Array}\n * @private\n */\n\nexport const uniq = collection => collection.filter((item, index) => collection.indexOf(item) === index);\n","/**\n * @module Selector\n */\n\nimport { win, each } from '../util';\n\nlet isPrototypeSet = false;\n\nconst reFragment = /^\\s*<(\\w+|!)[^>]*>/;\nconst reSingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/;\nconst reSimpleSelector = /^[.#]?[\\w-]*$/;\n\n/*\n * Versatile wrapper for `querySelectorAll`.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @param {String|Node|NodeList} context=document The context for the selector to query elements.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     var $items = $(.items');\n * @example\n *     var $element = $(domElement);\n * @example\n *     var $list = $(nodeList, document.body);\n * @example\n *     var $element = $('<p>evergreen</p>');\n */\n\nconst domtastic = function domtastic(selector, context = document) {\n\n  let collection;\n\n  if(!selector) {\n\n    collection = document.querySelectorAll(null);\n\n  } else if(selector instanceof DOMtastic) {\n\n    return selector;\n\n  } else if(typeof selector !== 'string') {\n\n    collection = selector.nodeType || selector === window ? [selector] : selector;\n\n  } else if(reFragment.test(selector)) {\n\n    collection = createFragment(selector);\n\n  } else {\n\n    context = typeof context === 'string' ? document.querySelector(context) : context.length ? context[0] : context;\n\n    collection = querySelector(selector, context);\n\n  }\n\n  return wrap(collection);\n\n};\n\nexport const $ = domtastic;\n\n/*\n * Find descendants matching the provided `selector` for each element in the collection.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The wrapped collection\n * @example\n *     $('.selector').find('.deep').$('.deepest');\n */\n\nexport const find = function(selector) {\n  const nodes = [];\n  each(this, node => each(querySelector(selector, node), child => {\n    if(nodes.indexOf(child) === -1) {\n      nodes.push(child);\n    }\n  }));\n  return $(nodes);\n};\n\n/*\n * Returns `true` if the element would be selected by the specified selector string; otherwise, returns `false`.\n *\n * @param {Node} element Element to test\n * @param {String} selector Selector to match against element\n * @return {Boolean}\n *\n * @example\n *     $.matches(element, '.match');\n */\n\nexport const matches = (() => {\n  const context = typeof Element !== 'undefined' ? Element.prototype : win;\n  const _matches = context.matches || context.matchesSelector || context.mozMatchesSelector || context.msMatchesSelector || context.oMatchesSelector || context.webkitMatchesSelector;\n  return (element, selector) => _matches.call(element, selector);\n})();\n\n/*\n * Use the faster `getElementById`, `getElementsByClassName` or `getElementsByTagName` over `querySelectorAll` if possible.\n *\n * @private\n * @param {String} selector Query selector.\n * @param {Node} context The context for the selector to query elements.\n * @return {Object} NodeList, HTMLCollection, or Array of matching elements (depending on method used).\n */\n\nconst querySelector = (selector, context) => {\n\n  const isSimpleSelector = reSimpleSelector.test(selector);\n\n  if(isSimpleSelector) {\n    if(selector[0] === '#') {\n      const element = (context.getElementById ? context : document).getElementById(selector.slice(1));\n      return element ? [element] : [];\n    }\n    if(selector[0] === '.') {\n      return context.getElementsByClassName(selector.slice(1));\n    }\n    return context.getElementsByTagName(selector);\n  }\n\n  return context.querySelectorAll(selector);\n\n};\n\n/*\n * Create DOM fragment from an HTML string\n *\n * @private\n * @param {String} html String representing HTML.\n * @return {NodeList}\n */\n\nconst createFragment = html => {\n\n  if(reSingleTag.test(html)) {\n    return [document.createElement(RegExp.$1)];\n  }\n\n  const elements = [];\n  const container = document.createElement('div');\n  const children = container.childNodes;\n\n  container.innerHTML = html;\n\n  for(let i = 0, l = children.length; i < l; i++) {\n    elements.push(children[i]);\n  }\n\n  return elements;\n};\n\n/*\n * Calling `$(selector)` returns a wrapped collection of elements.\n *\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n * @return Object) The wrapped collection\n */\n\nconst wrap = collection => {\n\n  if(!isPrototypeSet) {\n    DOMtastic.prototype = $.fn;\n    DOMtastic.prototype.constructor = DOMtastic;\n    isPrototypeSet = true;\n  }\n\n  return new DOMtastic(collection);\n};\n\n/*\n * Constructor for the Object.prototype strategy\n *\n * @constructor\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n */\n\nexport const DOMtastic = function DOMtastic(collection) {\n  let i = 0;\n  const length = collection.length;\n  for(; i < length;) {\n    this[i] = collection[i++];\n  }\n  this.length = length;\n};\n","/**\n * @module Array\n */\n\nimport { each as _each, toArray } from './util';\nimport { $, matches } from './selector/index';\n\nconst ArrayProto = Array.prototype;\n\n/**\n * Checks if the given callback returns a true(-ish) value for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Boolean} Whether each element passed the callback check.\n * @example\n *     // Test whether every element in the collection has the \"active\" attribute\n *     $('.items').every(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nexport const every = ArrayProto.every;\n\n/**\n * Filter the collection by selector or function, and return a new collection with the result.\n *\n * @param {String|Function} selector Selector or function to filter the collection.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} A new wrapped collection\n * @chainable\n * @example\n *     $('.items').filter('.active');\n * @example\n *     $('.items').filter(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nexport const filter = function(selector, thisArg) {\n  const callback = typeof selector === 'function' ? selector : element => matches(element, selector);\n  return $(ArrayProto.filter.call(this, callback, thisArg));\n};\n\n/**\n * Execute a function for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').forEach(function(element) {\n *         element.style.color = 'evergreen';\n *     );\n */\n\nexport const forEach = function(callback, thisArg) {\n  return _each(this, callback, thisArg);\n};\n\nexport const each = forEach;\n\n/**\n * Returns the index of an element in the collection.\n *\n * @param {Node} element\n * @return {Number} The zero-based index, -1 if not found.\n * @example\n *     $('.items').indexOf(element); // 2\n */\n\nexport const indexOf = ArrayProto.indexOf;\n\n/**\n * Create a new collection by executing the callback for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Array} Collection with the return value of the executed callback for each element.\n * @example\n *     // Create a new array with the attribute value of each element:\n *     $('.items').map(function(element) {\n *         return element.getAttribute('name')\n */\n\nexport const map = ArrayProto.map;\n\n/**\n * Removes the last element from the collection, and returns that element.\n *\n * @return {Object} The last element from the collection.\n * @example\n *     var lastElement = $('.items').pop();\n */\n\nexport const pop = ArrayProto.pop;\n\n/**\n * Adds one or more elements to the end of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').push(element);\n */\n\nexport const push = ArrayProto.push;\n\n/**\n * Apply a function against each element in the collection, and this accumulator function has to reduce it\n * to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     // Calculate the combined height of elements:\n *     $('.items').reduce(function(previousValue, element, index, collection) {\n *         return previousValue + element.clientHeight;\n *     }, 0);\n */\n\nexport const reduce = ArrayProto.reduce;\n\n/**\n * Apply a function against each element in the collection (from right-to-left), and this accumulator function has\n * to reduce it to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     // Concatenate the text of elements in reversed order:\n *     $('.items').reduceRight(function(previousValue, element, index, collection) {\n *         return previousValue + element.textContent;\n *     }, '');\n */\n\nexport const reduceRight = ArrayProto.reduceRight;\n\n/**\n * Reverses an array in place. The first array element becomes the last and the last becomes the first.\n *\n * @return {Object} The wrapped collection, reversed\n * @chainable\n * @example\n *     $('.items').reverse();\n */\n\nexport const reverse = function() {\n  return $(toArray(this).reverse());\n};\n\n/**\n * Removes the first element from the collection, and returns that element.\n *\n * @return {Object} The first element from the collection.\n * @example\n *     var firstElement = $('.items').shift();\n */\n\nexport const shift = ArrayProto.shift;\n\n/**\n * Checks if the given callback returns a true(-ish) value for any of the elements in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @return {Boolean} Whether any element passed the callback check.\n * @example\n *     $('.items').some(function(element) {\n *         return element.hasAttribute('active')\n *     }); // true/false\n */\n\nexport const some = ArrayProto.some;\n\n/**\n * Adds one or more elements to the beginning of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').unshift(element);\n */\n\nexport const unshift = ArrayProto.unshift;\n","/**\n * @module BaseClass\n */\n\nimport { $ as selector, DOMtastic } from './selector/index';\nimport { extend } from './util';\n\nexport default function(api) {\n\n  /**\n   * Provide subclass for classes or components to extend from.\n   * The opposite and successor of plugins (no need to extend `$.fn` anymore, complete control).\n   *\n   * @return {Class} The class to extend from, including all `$.fn` methods.\n   * @example\n   *     import { BaseClass } from  'domtastic';\n   *\n   *     class MyComponent extends BaseClass {\n   *         doSomething() {\n   *             return this.addClass('.foo');\n   *         }\n   *     }\n   *\n   *     let component = new MyComponent('body');\n   *     component.doSomething();\n   *\n   * @example\n   *     import $ from  'domtastic';\n   *\n   *     class MyComponent extends $.BaseClass {\n   *         progress(value) {\n   *             return this.attr('data-progress', value);\n   *         }\n   *     }\n   *\n   *     let component = new MyComponent(document.body);\n   *     component.progress('ive').append('<p>enhancement</p>');\n   */\n\n  class BaseClass {\n    constructor() {\n      DOMtastic.call(this, selector(...arguments));\n    }\n  }\n  extend(BaseClass.prototype, api);\n  return BaseClass;\n}\n","/**\n * @module CSS\n */\n\nimport { each } from './util';\n\nconst isNumeric = value => !isNaN(parseFloat(value)) && isFinite(value);\n\nconst camelize = value => value.replace(/-([\\da-z])/gi, (matches, letter) => letter.toUpperCase());\n\nconst dasherize = value => value.replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\n\n/**\n * Get the value of a style property for the first element, or set one or more style properties for each element in the collection.\n *\n * @param {String|Object} key The name of the style property to get or set. Or an object containing key-value pairs to set as style properties.\n * @param {String} [value] The value of the style property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').css('padding-left'); // get\n *     $('.item').css('color', '#f00'); // set\n *     $('.item').css({'border-width': '1px', display: 'inline-block'}); // set multiple\n */\n\nexport const css = function(key, value) {\n\n  let styleProps, prop, val;\n\n  if(typeof key === 'string') {\n    key = camelize(key);\n\n    if(typeof value === 'undefined') {\n      let element = this.nodeType ? this : this[0];\n      if(element) {\n        val = element.style[key];\n        return isNumeric(val) ? parseFloat(val) : val;\n      }\n      return undefined;\n    }\n\n    styleProps = {};\n    styleProps[key] = value;\n  } else {\n    styleProps = key;\n    for(prop in styleProps) {\n      val = styleProps[prop];\n      delete styleProps[prop];\n      styleProps[camelize(prop)] = val;\n    }\n  }\n\n  each(this, element => {\n    for(prop in styleProps) {\n      if(styleProps[prop] || styleProps[prop] === 0) {\n        element.style[prop] = styleProps[prop];\n      } else {\n        element.style.removeProperty(dasherize(prop));\n      }\n    }\n  });\n\n  return this;\n};\n","/**\n * @module DOM\n */\n\nimport { toArray } from '../util';\nimport { $ } from '../selector/index';\n\nconst forEach = Array.prototype.forEach;\n\n/**\n * Append element(s) to each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to append to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').append('<p>more</p>');\n */\n\nexport const append = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('beforeend', element);\n    } else {\n      if(element instanceof Node) {\n        this.appendChild(element);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements, this.appendChild.bind(this));\n      }\n    }\n  } else {\n    _each(this, append, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) at the beginning of each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place at the beginning of the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prepend('<span>start</span>');\n */\n\nexport const prepend = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('afterbegin', element);\n    } else {\n      if(element instanceof Node) {\n        this.insertBefore(element, this.firstChild);\n      } else {\n        let elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements.reverse(), prepend.bind(this));\n      }\n    }\n  } else {\n    _each(this, prepend, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) before each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) before to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').before('<p>prefix</p>');\n */\n\nexport const before = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('beforebegin', element);\n    } else {\n      if(element instanceof Node) {\n        this.parentNode.insertBefore(element, this);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements, before.bind(this));\n      }\n    }\n  } else {\n    _each(this, before, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) after each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) after to the element(s). Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').after('<span>suf</span><span>fix</span>');\n */\n\nexport const after = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('afterend', element);\n    } else {\n      if(element instanceof Node) {\n        this.parentNode.insertBefore(element, this.nextSibling);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements.reverse(), after.bind(this));\n      }\n    }\n  } else {\n    _each(this, after, element);\n  }\n  return this;\n};\n\n/**\n * Clone a wrapped object.\n *\n * @return {Object} Wrapped collection of cloned nodes.\n * @example\n *     $(element).clone();\n */\n\nexport const clone = function() {\n  return $(_clone(this));\n};\n\n/**\n * Clone an object\n *\n * @param {String|Node|NodeList|Array} element The element(s) to clone.\n * @return {String|Node|NodeList|Array} The cloned element(s)\n * @private\n */\n\nexport const _clone = element => {\n  if(typeof element === 'string') {\n    return element;\n  } else if(element instanceof Node) {\n    return element.cloneNode(true);\n  } else if('length' in element) {\n    return [].map.call(element, el => el.cloneNode(true));\n  }\n  return element;\n};\n\n/**\n * Specialized iteration, applying `fn` in reversed manner to a clone of each element, but the provided one.\n *\n * @param {NodeList|Array} collection\n * @param {Function} fn\n * @param {Node} element\n * @private\n */\n\nexport const _each = (collection, fn, element) => {\n  let l = collection.length;\n  while(l--) {\n    const elm = l === 0 ? element : _clone(element);\n    fn.call(collection[l], elm);\n  }\n};\n","/**\n * @module Attr\n */\n\nimport { each } from '../util';\n\n/**\n * Get the value of an attribute for the first element, or set one or more attributes for each element in the collection.\n *\n * @param {String|Object} key The name of the attribute to get or set. Or an object containing key-value pairs to set as attributes.\n * @param {String} [value] The value of the attribute to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').attr('attrName'); // get\n *     $('.item').attr('attrName', 'attrValue'); // set\n *     $('.item').attr({attr1: 'value1', 'attr-2': 'value2'}); // set multiple\n */\n\nexport const attr = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element ? element.getAttribute(key) : undefined;\n  }\n\n  return each(this, element => {\n    if(typeof key === 'object') {\n      for(let attr in key) {\n        element.setAttribute(attr, key[attr]);\n      }\n    } else {\n      element.setAttribute(key, value);\n    }\n  });\n};\n\n/**\n * Remove attribute from each element in the collection.\n *\n * @param {String} key Attribute name\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeAttr('attrName');\n */\n\nexport const removeAttr = function(key) {\n  return each(this, element => element.removeAttribute(key));\n};\n","/**\n * @module Class\n */\n\nimport { each } from '../util';\n\n/**\n * Add a class to the element(s)\n *\n * @param {String} value Space-separated class name(s) to add to the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').addClass('bar');\n *     $('.item').addClass('bar foo');\n */\n\nexport const addClass = function(value) {\n  if(value && value.length) {\n    each(value.split(' '), _each.bind(this, 'add'));\n  }\n  return this;\n};\n\n/**\n * Remove a class from the element(s)\n *\n * @param {String} value Space-separated class name(s) to remove from the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeClass('bar');\n *     $('.items').removeClass('bar foo');\n */\n\nexport const removeClass = function(value) {\n  if(value && value.length) {\n    each(value.split(' '), _each.bind(this, 'remove'));\n  }\n  return this;\n};\n\n/**\n * Toggle a class at the element(s)\n *\n * @param {String} value Space-separated class name(s) to toggle at the element(s).\n * @param {Boolean} [state] A Boolean value to determine whether the class should be added or removed.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').toggleClass('bar');\n *     $('.item').toggleClass('bar foo');\n *     $('.item').toggleClass('bar', true);\n */\n\nexport const toggleClass = function(value, state) {\n  if(value && value.length) {\n    const action = typeof state === 'boolean' ? state ? 'add' : 'remove' : 'toggle';\n    each(value.split(' '), _each.bind(this, action));\n  }\n  return this;\n};\n\n/**\n * Check if the element(s) have a class.\n *\n * @param {String} value Check if the DOM element contains the class name. When applied to multiple elements,\n * returns `true` if _any_ of them contains the class name.\n * @return {Boolean} Whether the element's class attribute contains the class name.\n * @example\n *     $('.item').hasClass('bar');\n */\n\nexport const hasClass = function(value) {\n  return (this.nodeType ? [this] : this).some(element => element.classList.contains(value));\n};\n\n/**\n * Specialized iteration, applying `fn` of the classList API to each element.\n *\n * @param {String} fnName\n * @param {String} className\n * @private\n */\n\nconst _each = function(fnName, className) {\n  return each(this, element => element.classList[fnName](className));\n};\n","/**\n * @module contains\n */\n\n/**\n * Test whether an element contains another element in the DOM.\n *\n * @param {Element} container The element that may contain the other element.\n * @param {Element} element The element that may be a descendant of the other element.\n * @return {Boolean} Whether the `container` element contains the `element`.\n * @example\n *     $.contains(parentElement, childElement); // true/false\n */\n\nexport const contains = (container, element) => {\n  if(!container || !element || container === element) {\n    return false;\n  } else if(container.contains) {\n    return container.contains(element);\n  } else if(container.compareDocumentPosition) {\n    return !(container.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_DISCONNECTED);\n  }\n  return false;\n};\n","/**\n * @module Data\n */\n\nimport { each } from '../util';\n\nconst isSupportsDataSet = typeof document !== 'undefined' && 'dataset' in document.documentElement;\nconst DATAKEYPROP = isSupportsDataSet ? 'dataset' : '__DOMTASTIC_DATA__';\n\n/**\n * Get data from first element, or set data for each element in the collection.\n *\n * @param {String} key The key for the data to get or set.\n * @param {String} [value] The data to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').data('attrName'); // get\n *     $('.item').data('attrName', {any: 'data'}); // set\n */\n\nexport const data = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element && DATAKEYPROP in element ? element[DATAKEYPROP][key] : undefined;\n  }\n\n  return each(this, element => {\n    if(!isSupportsDataSet) {\n      element[DATAKEYPROP] = element[DATAKEYPROP] || {};\n    }\n    element[DATAKEYPROP][key] = value;\n  });\n};\n\n/**\n * Get property from first element, or set property on each element in the collection.\n *\n * @param {String} key The name of the property to get or set.\n * @param {String} [value] The value of the property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prop('attrName'); // get\n *     $('.item').prop('attrName', 'attrValue'); // set\n */\n\nexport const prop = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element && element ? element[key] : undefined;\n  }\n\n  return each(this, element => element[key] = value);\n};\n","/**\n * @module DOM (extra)\n */\n\nimport { each } from '../util';\nimport { append, before } from './index';\nimport { $ } from '../selector/index';\n\n/**\n * Append each element in the collection to the specified element(s).\n *\n * @param {Node|NodeList|Object} element What to append the element(s) to. Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').appendTo(container);\n */\n\nexport const appendTo = function(element) {\n  const context = typeof element === 'string' ? $(element) : element;\n  append.call(context, this);\n  return this;\n};\n\n/*\n * Empty each element in the collection.\n *\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').empty();\n */\n\nexport const empty = function() {\n  return each(this, element => element.innerHTML = '');\n};\n\n/**\n * Remove the collection from the DOM.\n *\n * @return {Array} Array containing the removed elements\n * @example\n *     $('.item').remove();\n */\n\nexport const remove = function() {\n  return each(this, element => {\n    if(element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  });\n};\n\n/**\n * Replace each element in the collection with the provided new content, and return the array of elements that were replaced.\n *\n * @return {Array} Array containing the replaced elements\n */\n\nexport const replaceWith = function() {\n  return before.apply(this, arguments).remove();\n};\n\n/**\n * Get the `textContent` from the first, or set the `textContent` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').text('New content');\n */\n\nexport const text = function(value) {\n\n  if(value === undefined) {\n    return this[0].textContent;\n  }\n\n  return each(this, element => element.textContent = '' + value);\n};\n\n/**\n * Get the `value` from the first, or set the `value` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('input.firstName').val('New value');\n */\n\nexport const val = function(value) {\n\n  if(value === undefined) {\n    return this.length > 0 ? this[0].value : undefined;\n  }\n\n  return each(this, element => element.value = value);\n};\n","/**\n * @module HTML\n */\n\nimport { each } from '../util';\n\n/*\n * Get the HTML contents of the first element, or set the HTML contents for each element in the collection.\n *\n * @param {String} [fragment] HTML fragment to set for the element. If this argument is omitted, the HTML contents are returned.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').html();\n *     $('.item').html('<span>more</span>');\n */\n\nexport const html = function(fragment) {\n\n  if(fragment === undefined) {\n    const element = this.nodeType ? this : this[0];\n    return element ? element.innerHTML : undefined;\n  }\n\n  return each(this, element => element.innerHTML = fragment);\n};\n","/**\n * @module closest\n */\n\nimport { $, matches } from './index';\nimport { each, uniq } from '../util';\n\n/**\n * Return the closest element matching the selector (starting by itself) for each element in the collection.\n *\n * @param {String} selector Filter\n * @param {Object} [context] If provided, matching elements must be a descendant of this element\n * @return {Object} New wrapped collection (containing zero or one element)\n * @chainable\n * @example\n *     $('.selector').closest('.container');\n */\n\nexport const closest = (() => {\n\n  const closest = function(selector, context) {\n    const nodes = [];\n    each(this, node => {\n      while(node && node !== context) {\n        if(matches(node, selector)) {\n          nodes.push(node);\n          break;\n        }\n        node = node.parentElement;\n      }\n    });\n    return $(uniq(nodes));\n  };\n\n  return typeof Element === 'undefined' || !Element.prototype.closest ? closest : function(selector, context) {\n    if(!context) {\n      const nodes = [];\n      each(this, node => {\n        const n = node.closest(selector);\n        if(n) {\n          nodes.push(n);\n        }\n      });\n      return $(uniq(nodes));\n    } else {\n      return closest.call(this, selector, context);\n    }\n  };\n})();\n","/**\n * @module Events\n */\n\nimport { each } from '../util';\nimport { closest } from '../selector/closest';\n\n/**\n * Shorthand for `addEventListener`. Supports event delegation if a filter (`selector`) is provided.\n *\n * @param {String} eventNames List of space-separated event types to be added to the element(s)\n * @param {String} [selector] Selector to filter descendants that delegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @param {Boolean} once=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').on('click', callback);\n *     $('.container').on('click focus', '.item', handler);\n */\n\nexport const on = function(eventNames, selector, handler, useCapture, once) {\n\n  if(typeof selector === 'function') {\n    handler = selector;\n    selector = null;\n  }\n\n  let parts,\n    namespace,\n    eventListener;\n\n  eventNames.split(' ').forEach(eventName => {\n\n    parts = eventName.split('.');\n    eventName = parts[0] || null;\n    namespace = parts[1] || null;\n\n    eventListener = proxyHandler(handler);\n\n    each(this, element => {\n\n      if(selector) {\n        eventListener = delegateHandler.bind(element, selector, eventListener);\n      }\n\n      if(once) {\n        const listener = eventListener;\n        eventListener = event => {\n          off.call(element, eventNames, selector, handler, useCapture);\n          listener.call(element, event);\n        };\n      }\n\n      element.addEventListener(eventName, eventListener, useCapture || false);\n\n      getHandlers(element).push({\n        eventName,\n        handler,\n        eventListener,\n        selector,\n        namespace\n      });\n    });\n\n  }, this);\n\n  return this;\n};\n\n/**\n * Shorthand for `removeEventListener`.\n *\n * @param {String} eventNames List of space-separated event types to be removed from the element(s)\n * @param {String} [selector] Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').off('click', callback);\n *     $('#my-element').off('myEvent myOtherEvent');\n *     $('.item').off();\n */\n\nexport const off = function(eventNames = '', selector, handler, useCapture) {\n\n  if(typeof selector === 'function') {\n    handler = selector;\n    selector = null;\n  }\n\n  let parts,\n    namespace,\n    handlers;\n\n  eventNames.split(' ').forEach(eventName => {\n\n    parts = eventName.split('.');\n    eventName = parts[0] || null;\n    namespace = parts[1] || null;\n\n    return each(this, element => {\n\n      handlers = getHandlers(element);\n\n      each(handlers.filter(item => {\n        return (\n          (!eventName || item.eventName === eventName) &&\n          (!namespace || item.namespace === namespace) &&\n          (!handler || item.handler === handler) &&\n          (!selector || item.selector === selector)\n        );\n      }), item => {\n        element.removeEventListener(item.eventName, item.eventListener, useCapture || false);\n        handlers.splice(handlers.indexOf(item), 1);\n      });\n\n      if(!eventName && !namespace && !selector && !handler) {\n        clearHandlers(element);\n      } else if(handlers.length === 0) {\n        clearHandlers(element);\n      }\n\n    });\n\n  }, this);\n\n  return this;\n};\n\n/**\n * Add event listener and execute the handler at most once per element.\n *\n * @param eventNames\n * @param selector\n * @param handler\n * @param useCapture\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').one('click', callback);\n */\n\nexport const one = function(eventNames, selector, handler, useCapture) {\n  return on.call(this, eventNames, selector, handler, useCapture, 1);\n};\n\n/**\n * Get event handlers from an element\n *\n * @private\n * @param {Node} element\n * @return {Array}\n */\n\nconst eventKeyProp = '__domtastic_event__';\nlet id = 1;\nlet handlers = {};\nlet unusedKeys = [];\n\nexport const getHandlers = element => {\n  if(!element[eventKeyProp]) {\n    element[eventKeyProp] = unusedKeys.length === 0 ? ++id : unusedKeys.pop();\n  }\n  const key = element[eventKeyProp];\n  return handlers[key] || (handlers[key] = []);\n};\n\n/**\n * Clear event handlers for an element\n *\n * @private\n * @param {Node} element\n */\n\nexport const clearHandlers = element => {\n  const key = element[eventKeyProp];\n  if(handlers[key]) {\n    handlers[key] = null;\n    element[eventKeyProp] = null;\n    unusedKeys.push(key);\n  }\n};\n\n/**\n * Function to create a handler that augments the event object with some extra methods,\n * and executes the callback with the event and the event data (i.e. `event.detail`).\n *\n * @private\n * @param handler Callback to execute as `handler(event, data)`\n * @return {Function}\n */\n\nexport const proxyHandler = handler => function(event) {\n  return handler.call(this, augmentEvent(event));\n};\n\nconst eventMethods = {\n  preventDefault: 'isDefaultPrevented',\n  stopImmediatePropagation: 'isImmediatePropagationStopped',\n  stopPropagation: 'isPropagationStopped'\n};\nconst returnTrue = () => true;\nconst returnFalse = () => false;\n\n/**\n * Attempt to augment events and implement something closer to DOM Level 3 Events.\n *\n * @private\n * @param {Object} event\n * @return {Function}\n */\n\nconst augmentEvent = event => {\n  if(!event.isDefaultPrevented || event.stopImmediatePropagation || event.stopPropagation) {\n    for(const methodName in eventMethods) {\n      (function(methodName, testMethodName, originalMethod) {\n        event[methodName] = function() {\n          this[testMethodName] = returnTrue;\n          return originalMethod && originalMethod.apply(this, arguments);\n        };\n        event[testMethodName] = returnFalse;\n      }(methodName, eventMethods[methodName], event[methodName]));\n    }\n    if(event._preventDefault) {\n      event.preventDefault();\n    }\n  }\n  return event;\n};\n\n/**\n * Function to test whether delegated events match the provided `selector` (filter),\n * if the event propagation was stopped, and then actually call the provided event handler.\n * Use `this` instead of `event.currentTarget` on the event object.\n *\n * @private\n * @param {String} selector Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Event} event\n */\n\nexport const delegateHandler = function(selector, handler, event) {\n  const eventTarget = event._target || event.target;\n  const currentTarget = closest.call([eventTarget], selector, this)[0];\n  if(currentTarget && currentTarget !== this) {\n    if(currentTarget === eventTarget || !(event.isPropagationStopped && event.isPropagationStopped())) {\n      handler.call(currentTarget, event);\n    }\n  }\n};\n\nexport const bind = on;\nexport const unbind = off;\n","/**\n * @module trigger\n */\n\nimport { win, each } from '../util';\nimport { contains } from '../dom/contains';\n\nconst reMouseEvent = /^(mouse(down|up|over|out|enter|leave|move)|contextmenu|(dbl)?click)$/;\nconst reKeyEvent = /^key(down|press|up)$/;\n\n/**\n * Trigger event at element(s)\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event (`params.detail` will be set to this).\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').trigger('anyEventType');\n */\n\nexport const trigger = function(type, data, {bubbles = true, cancelable = true, preventDefault = false} = {}) {\n\n  const EventConstructor = getEventConstructor(type);\n  const event = new EventConstructor(type, {\n    bubbles,\n    cancelable,\n    preventDefault,\n    detail: data\n  });\n\n  event._preventDefault = preventDefault;\n\n  return each(this, element => {\n    if(!bubbles || isEventBubblingInDetachedTree || isAttachedToDocument(element)) {\n      dispatchEvent(element, event);\n    } else {\n      triggerForPath(element, type, {\n        bubbles,\n        cancelable,\n        preventDefault,\n        detail: data\n      });\n    }\n  });\n};\n\nconst getEventConstructor = type => isSupportsOtherEventConstructors ? (reMouseEvent.test(type) ? MouseEvent : (reKeyEvent.test(type) ? KeyboardEvent : CustomEvent)) : CustomEvent;\n\n/**\n * Trigger event at first element in the collection. Similar to `trigger()`, except:\n *\n * - Event does not bubble\n * - Default event behavior is prevented\n * - Only triggers handler for first matching element\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event\n * @example\n *     $('form').triggerHandler('submit');\n */\n\nexport const triggerHandler = function(type, data) {\n  if(this[0]) {\n    trigger.call(this[0], type, data, {\n      bubbles: false,\n      preventDefault: true\n    });\n  }\n};\n\n/**\n * Check whether the element is attached to or detached from) the document\n *\n * @private\n * @param {Node} element Element to test\n * @return {Boolean}\n */\n\nconst isAttachedToDocument = element => {\n  if(element === window || element === document) {\n    return true;\n  }\n  return contains(element.ownerDocument.documentElement, element);\n};\n\n/**\n * Dispatch the event at the element and its ancestors.\n * Required to support delegated events in browsers that don't bubble events in detached DOM trees.\n *\n * @private\n * @param {Node} element First element to dispatch the event at\n * @param {String} type Type of the event\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * Will be set to false (but shouldn't matter since events don't bubble anyway).\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n */\n\nconst triggerForPath = (element, type, params = {}) => {\n  params.bubbles = false;\n  const event = new CustomEvent(type, params);\n  event._target = element;\n  do {\n    dispatchEvent(element, event);\n  } while(element = element.parentNode); // eslint-disable-line no-cond-assign\n};\n\n/**\n * Dispatch event to element, but call direct event methods instead if available\n * (e.g. \"blur()\", \"submit()\") and if the event is non-cancelable.\n *\n * @private\n * @param {Node} element Element to dispatch the event at\n * @param {Object} event Event to dispatch\n */\n\nconst directEventMethods = ['blur', 'focus', 'select', 'submit'];\n\nconst dispatchEvent = (element, event) => {\n  if(directEventMethods.indexOf(event.type) !== -1 && typeof element[event.type] === 'function' && !event._preventDefault && !event.cancelable) {\n    element[event.type]();\n  } else {\n    element.dispatchEvent(event);\n  }\n};\n\n/**\n * Polyfill for CustomEvent, borrowed from [MDN](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill).\n * Needed to support IE (9, 10, 11) & PhantomJS\n */\n\n(() => {\n  const CustomEvent = (event, params = {\n    bubbles: false,\n    cancelable: false,\n    detail: undefined\n  }) => {\n    let customEvent = document.createEvent('CustomEvent');\n    customEvent.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return customEvent;\n  };\n\n  CustomEvent.prototype = win.CustomEvent && win.CustomEvent.prototype;\n  win.CustomEvent = CustomEvent;\n\n})();\n\n/*\n * Are events bubbling in detached DOM trees?\n * @private\n */\n\nconst isEventBubblingInDetachedTree = (() =>{\n  let isBubbling = false;\n  const doc = win.document;\n  if(doc) {\n    const parent = doc.createElement('div');\n    const child = parent.cloneNode();\n    parent.appendChild(child);\n    parent.addEventListener('e', function() {\n      isBubbling = true;\n    });\n    child.dispatchEvent(new CustomEvent('e', {bubbles: true}));\n  }\n  return isBubbling;\n})();\n\nconst isSupportsOtherEventConstructors = (() => {\n  try {\n    new MouseEvent('click');\n  } catch(e) {\n    return false;\n  }\n  return true;\n})();\n","/**\n * @module Ready\n */\n\n/**\n * Execute callback when `DOMContentLoaded` fires for `document`, or immediately if called afterwards.\n *\n * @param handler Callback to execute when initial DOM content is loaded.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $(document).ready(callback);\n */\n\nexport const ready = function(handler) {\n  if(/complete|loaded|interactive/.test(document.readyState) && document.body) {\n    handler();\n  } else {\n    document.addEventListener('DOMContentLoaded', handler, false);\n  }\n  return this;\n};\n","/**\n * @module noConflict\n */\n\nimport { win } from './util';\n\n/*\n * Save the previous value of the global `$` variable, so that it can be restored later on.\n * @private\n */\n\nconst previousLib = win.$;\n\n/**\n * In case another library sets the global `$` variable before DOMtastic does,\n * this method can be used to return the global `$` to that other library.\n *\n * @return {Object} Reference to DOMtastic.\n * @example\n *     var domtastic = $.noConflict();\n */\n\nexport const noConflict = function() {\n  win.$ = previousLib;\n  return this;\n};\n","/**\n * @module Selector (extra)\n */\n\nimport { each, toArray } from '../util';\nimport { $, matches } from './index';\n\n/**\n * Return children of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').children();\n *     $('.selector').children('.filter');\n */\n\nexport const children = function(selector) {\n  const nodes = [];\n  each(this, element => {\n    if(element.children) {\n      each(element.children, child => {\n        if(!selector || (selector && matches(child, selector))) {\n          nodes.push(child);\n        }\n      });\n    }\n  });\n  return $(nodes);\n};\n\n/**\n * Add the elements of a wrapped collection to another.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The extended wrapped collection\n * @example\n *     $('.items').concat($('.more-items));\n *     $('.items').concat('.more-items);\n *     $('.items').concat('<div>more</div>');\n */\n\nexport const concat = function(selector) {\n  each($(selector), element => {\n    if([].indexOf.call(this, element) === -1) {\n      [].push.call(this, element);\n    }\n  });\n  return this;\n};\n\n/**\n * Return child nodes of each element in the collection, including text and comment nodes.\n *\n * @return {Object} New wrapped collection\n * @example\n *     $('.selector').contents();\n */\n\nexport const contents = function() {\n  const nodes = [];\n  each(this, element => nodes.push.apply(nodes, toArray(element.childNodes)));\n  return $(nodes);\n};\n\n/**\n * Return a collection containing only the one at the specified index.\n *\n * @param {Number} index\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').eq(1)\n *     // The second item; result is the same as doing $($('.items')[1]);\n */\n\nexport const eq = function(index) {\n  return slice.call(this, index, index + 1);\n};\n\n/**\n * Return a collection containing only the first item.\n *\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').first()\n *     // The first item; result is the same as doing $($('.items')[0]);\n */\n\nexport const first = function() {\n  return slice.call(this, 0, 1);\n};\n\n/**\n * Return the DOM element at the specified index.\n *\n * @param {Number} index\n * @return {Node} Element at the specified index\n * @example\n *     $('.items').get(1)\n *     // The second element; result is the same as doing $('.items')[1];\n */\n\nexport const get = function(index) {\n  return this[index];\n};\n\n/**\n * Return the parent elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').parent();\n *     $('.selector').parent('.filter');\n */\n\nexport const parent = function(selector) {\n  const nodes = [];\n  each(this, element => {\n    if(!selector || (selector && matches(element.parentNode, selector))) {\n      nodes.push(element.parentNode);\n    }\n  });\n  return $(nodes);\n};\n\n/**\n * Return the sibling elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').siblings();\n *     $('.selector').siblings('.filter');\n */\n\nexport const siblings = function(selector) {\n  const nodes = [];\n  each(this, element => each(element.parentNode.children, sibling => {\n    if(sibling !== element && (!selector || (selector && matches(sibling, selector)))) {\n      nodes.push(sibling);\n    }\n  }));\n  return $(nodes);\n};\n\n/**\n * Create a new, sliced collection.\n *\n * @param {Number} start\n * @param {Number} end\n * @return {Object} New wrapped collection\n * @example\n *     $('.items').slice(1, 3)\n *     // New wrapped collection containing the second, third, and fourth element.\n */\n\nexport const slice = function(start, end) { // eslint-disable-line no-unused-vars\n  return $([].slice.apply(this, arguments));\n};\n","/**\n * @module Type\n */\n\n/*\n * Determine if the argument passed is a Javascript function object.\n *\n * @param {Object} [obj] Object to test whether or not it is a function.\n * @return {boolean}\n * @example\n *     $.isFunction(function(){}); // true\n * @example\n *     $.isFunction({}); // false\n */\n\nexport const isFunction = obj => typeof obj === 'function';\n\n/*\n * Determine whether the argument is an array.\n *\n * @param {Object} [obj] Object to test whether or not it is an array.\n * @return {boolean}\n * @example\n *     $.isArray([]); // true\n * @example\n *     $.isArray({}); // false\n */\n\nexport const isArray = Array.isArray;\n","/**\n * @module API\n */\n\nimport { extend } from './util';\n\nconst api = {};\nlet $ = {};\n\n// Import modules to build up the API\n\nimport * as array from './array';\nimport BaseClass from './baseClass';\nimport * as css from './css';\nimport * as dom from './dom/index';\nimport * as dom_attr from './dom/attr';\nimport * as dom_class from './dom/class';\nimport * as dom_contains from './dom/contains';\nimport * as dom_data from './dom/data';\nimport * as dom_extra from './dom/extra';\nimport * as dom_html from './dom/html';\nimport * as event from './event/index';\nimport * as event_trigger from './event/trigger';\nimport * as event_ready from './event/ready';\nimport * as noconflict from './noconflict';\nimport * as selector from './selector/index';\nimport * as selector_closest from './selector/closest';\nimport * as selector_extra from './selector/extra';\nimport * as type from './type';\n\nif(typeof selector !== 'undefined') {\n  $ = selector.$;\n  $.matches = selector.matches;\n  api.find = selector.find;\n}\n\nextend($, dom_contains, noconflict, type);\nextend(api, array, css, dom_attr, dom, dom_class, dom_data, dom_extra, dom_html, event, event_trigger, event_ready, selector_closest, selector_extra);\n\n$.fn = api;\n\n// Version\n\n$.version = '__VERSION__';\n\n// Util\n\n$.extend = extend;\n\n// Provide base class to extend from\n\nif(typeof BaseClass !== 'undefined') {\n  $.BaseClass = BaseClass($.fn);\n}\n\n// Export interface\n\nexport default $;\n"],"names":["win","window","toArray","length","collection","result","Array","i","each","callback","thisArg","undefined","nodeType","call","extend","target","sources","forEach","prop","src","uniq","filter","item","index","indexOf","isPrototypeSet","reFragment","reSingleTag","reSimpleSelector","$","selector","context","document","DOMtastic","test","createFragment","querySelector","querySelectorAll","wrap","find","nodes","this","node","child","push","matches","Element","prototype","_matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","element","getElementById","slice","getElementsByClassName","getElementsByTagName","html","createElement","RegExp","$1","elements","container","children","childNodes","innerHTML","l","fn","constructor","ArrayProto","every","_each","map","pop","reduce","reduceRight","shift","some","unshift","reverse","api","BaseClass","arguments","isNumeric","isNaN","parseFloat","value","isFinite","camelize","replace","letter","toUpperCase","dasherize","toLowerCase","key","styleProps","val","style","removeProperty","append","Node","insertAdjacentHTML","appendChild","NodeList","bind","before","parentNode","insertBefore","_clone","cloneNode","el","elm","prepend","firstChild","after","nextSibling","getAttribute","attr","setAttribute","removeAttribute","fnName","className","classList","split","state","action","contains","compareDocumentPosition","DOCUMENT_POSITION_DISCONNECTED","isSupportsDataSet","documentElement","DATAKEYPROP","removeChild","apply","remove","textContent","fragment","closest","parentElement","n","on","eventNames","handler","useCapture","once","parts","namespace","eventListener","eventName","proxyHandler","delegateHandler","listener","event","addEventListener","off","handlers","getHandlers","removeEventListener","splice","eventKeyProp","id","unusedKeys","clearHandlers","augmentEvent","eventMethods","returnTrue","returnFalse","isDefaultPrevented","stopImmediatePropagation","stopPropagation","methodName","testMethodName","originalMethod","_preventDefault","preventDefault","eventTarget","_target","currentTarget","isPropagationStopped","unbind","reMouseEvent","reKeyEvent","trigger","type","data","bubbles","cancelable","getEventConstructor","isEventBubblingInDetachedTree","isAttachedToDocument","isSupportsOtherEventConstructors","MouseEvent","KeyboardEvent","CustomEvent","ownerDocument","triggerForPath","params","directEventMethods","dispatchEvent","customEvent","createEvent","initCustomEvent","detail","isBubbling","doc","parent","e","readyState","body","previousLib","start","end","sibling","isArray","obj","dom_contains","noconflict","array","css","dom_attr","dom","dom_class","dom_data","dom_extra","dom_html","event_trigger","event_ready","selector_closest","selector_extra","version"],"mappings":"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"}